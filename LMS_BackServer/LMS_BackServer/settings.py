"""
Django settings for LMS_BackServer project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hm2to9o2##jk$-j-)528u4s9+595q^js4b)m2glx^5(z4^*(7r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '192.168.1.6',
]


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'channels',
    'api.apps.ApiConfig',  
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

import os

ROOT_URLCONF = 'LMS_BackServer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LMS_BackServer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'library_db',     # Change this to your MySQL database name
        'USER': 'root',           # MySQL username (default: 'root')
        'PASSWORD': 'nishu*2003', # Replace with your MySQL password
        'HOST': '127.0.0.1',      # Use 'localhost' or '127.0.0.1'
        'PORT': '3306',           # Default MySQL port
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dhaka'

TIME_INPUT_FORMATS = ('%I:%M %p',)

USE_I18N = True

USE_TZ = True




REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    )
}

CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOW_CREDENTIALS = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



CORS_ORIGIN_WHITELIST = [
    'http://localhost:5173',
    'http://127.0.0.1:5173',
    'http://192.168.1.6:5173',
]
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:5173',
    'http://127.0.0.1:5173',
    'http://192.168.1.6:5173',
]


CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True  
CORS_ALLOW_METHODS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']
CORS_ALLOW_HEADERS = [
    'Accept',
    'Accept-Language',
    'Content-Type',
    'Origin',
    'X-Requested-With',
    'Authorization',
    'X-CSRFToken',  
]


CSRF_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = None  
CSRF_HEADER_NAME = 'X-CSRFToken'
CSRF_COOKIE_NAME = "csrftoken"  


CORS_EXPOSE_HEADERS = [
    'Access-Control-Allow-Origin',
    'X-CSRFToken',  
]

AUTH_USER_MODEL = 'api.CustomUser'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

BASE_URL = 'http://127.0.0.1:8000'

MEDIA_URL = '/media/'


from dotenv import load_dotenv

load_dotenv()


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_SSL = True
EMAIL_PORT = 465
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USERNAME')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')


CELERY_ALWAYS_EAGER_TEMP = os.environ.get('CELERY_ALWAYS_EAGER_TEMP', False)

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

CELERY_BEAT_SCHEDULE = {
    'update-records-every-10-seconds': {
        'task': 'api.tasks.update_records',
        'schedule': 10.0,
    },
    'delete-expired-csrf-every-2-seconds': {
        'task': 'api.tasks.csrf_expire',
        'schedule': 2.0,
    },
    'delete-expired-tokens-every-2-seconds': {
        'task': 'api.tasks.token_expire',
        'schedule': 2.0,
    },
    'send-email-every-1-hour': {
        'task': 'api.tasks.send_email',
        'schedule': 3600.0,
    },
    'clean-email-every-2-days': {
        'task': 'api.tasks.clean_email',
        'schedule': 172800.0,
    },
    'update-late-fine-every-1-day': {
        'task': 'api.tasks.clean_email',
        'schedule': 86400.0,
    },
}

if CELERY_ALWAYS_EAGER_TEMP:
    CELERY_ALWAYS_EAGER = True
    del CELERY_ALWAYS_EAGER_TEMP

DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024